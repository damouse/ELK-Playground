version: '2'

services:

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - LOGSPOUT=ignore
    networks:
      - elk

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      - LOGSPOUT=ignore
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./kibana/config/:/usr/share/kibana/config:ro
      - ./logtrail.json:/usr/share/kibana/plugins/logtrail/logtrail.json
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch
    environment:
      - LOGSPOUT=ignore

  # Moved to its own compose file
  # logspout:
  #   build:
  #     context: logspout/
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   environment:
  #     ROUTE_URIS: tcp://logstash:5000
  #     LOGSTASH_TAGS: docker-elk
  #     LOGSPOUT: ignore
  #   networks:
  #     - elk
  #   depends_on:
  #     - logstash
  #   restart: on-failure

networks:
  elk:
    driver: bridge
